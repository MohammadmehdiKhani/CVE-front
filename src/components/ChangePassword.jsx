import React, { useState, useEffect } from "react";
import http from "../services/httpService.js";
import { toast } from "react-toastify";
import { validate, validateField } from "../services/validation.js";
import Joi from "joi-browser";

const ChangePassword = ({ user }) => {
  const [data, setData] = useState({
    oldPassword: "",
    newPassword: "",
    newPasswordRepeat: "",
  });
  const [errors, setErrors] = useState({
    oldPassword: "",
    newPassword: "",
    newPasswordRepeat: "",
  });

  const schema = {
    oldPassword: Joi.string()
      .required()
      .min(3)
      .error((errors) => {
        return errors.map((error) => {
          switch (error.type) {
            case "any.empty":
              return { message: "رمز عبور نمی‌تواند خالی باشد!" };
            case "string.min":
              return { message: "رمز عبور نمیتواند کمتر از 3 حرف باشد!" };
          }
        });
      }),

    newPassword: Joi.string()
      .required()
      .min(3)
      .error((errors) => {
        return errors.map((error) => {
          switch (error.type) {
            case "any.empty":
              return { message: "رمز عبور نمی‌تواند خالی باشد!" };
            case "string.min":
              return { message: "رمز عبور نمیتواند کمتر از 3 حرف باشد!" };
          }
        });
      }),

    newPasswordRepeat: Joi.string()
      .required()
      .min(3)
      .error((errors) => {
        return errors.map((error) => {
          switch (error.type) {
            case "any.empty":
              return { message: "رمز عبور نمی‌تواند خالی باشد!" };
            case "string.min":
              return { message: "رمز عبور نمیتواند کمتر از 3 حرف باشد!" };
          }
        });
      }),
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const joiErrors = validate(data, schema);
    setErrors(joiErrors || {});

    if (data.newPassword !== data.newPasswordRepeat)
      setErrors({
        oldPassword: errors.oldPassword,
        newPassword: errors.newPassword,
        newPasswordRepeat: "تکرار رمز عبور جدید با رمز عبور جدید مطابق نیست!",
      });

    if (joiErrors || data.newPassword !== data.newPasswordRepeat) return;

    try {
      const response = await http.put(
        `http://localhost:3001/users/me/password`,
        {
          oldPassword: data.oldPassword,
          newPassword: data.newPassword,
          newPasswordRepeat: data.newPasswordRepeat,
        },
        { headers: { "x-auth-token": localStorage.getItem("token") } }
      );
      toast.success("رمز عبور تغییر کرد");
    } catch (e) {
      if (e.response && e.response.status == 400) {
        const errorsClone = { ...errors };
        errorsClone.username = e.response.data;
        setErrors(errorsClone);
      }
    }
  };

  const handleChange = async (e) => {
    const errorsClone = { ...errors };
    const message = validateField(e, schema);
    if (message) errorsClone[e.target.name] = message;
    else delete errorsClone[e.target.name];

    const dataClone = { ...data };
    dataClone[e.target.name] = e.target.value;
    setData(dataClone);
    setErrors(errorsClone);
  };

  return (
    <div className="container simple-card">
      <div className="row login-form-row">
        <div className="">
          <form className="login-form" onSubmit={handleSubmit} noValidate>
            <div className="form-row">
              <div className="col old-password-col">
                <div className="form-group right2left">
                  <label>
                    <span className="label_of_login_form_fields farsi">
                      رمز عبور قبلی
                    </span>
                  </label>
                  <input
                    className="form-control mt-1 farsi"
                    type="password"
                    placeholder="رمز عبور قبلی خود را وارد کنید"
                    id="old-password-input"
                    name="oldPassword"
                    onChange={handleChange}
                  ></input>
                  {errors.oldPassword && (
                    <div className="alert alert-danger farsi">
                      {errors.oldPassword}
                    </div>
                  )}
                </div>
              </div>
            </div>

            <div className="form-row mt-2">
              <div className="col">
                <div className="form-group right2left mt-1">
                  <label>
                    <span className="label_of_login_form_fields farsi">
                      رمز عبور جدید
                    </span>
                  </label>
                  <input
                    className="form-control farsi mt-1"
                    type="password"
                    placeholder="رمز عبور جدید را وارد کنید"
                    id="new-password-input"
                    name="newPassword"
                    onChange={handleChange}
                  ></input>
                  {errors.newPassword && (
                    <div className="alert alert-danger farsi">
                      {errors.newPassword}
                    </div>
                  )}
                </div>
              </div>
            </div>

            <div className="form-row mt-2">
              <div className="col">
                <div className="form-group right2left mt-1">
                  <label>
                    <span className="label_of_login_form_fields farsi">
                      تکرار رمز عبور جدید
                    </span>
                  </label>
                  <input
                    className="form-control farsi mt-1"
                    type="password"
                    placeholder="رمز عبور جدید را مجددا وارد کنید"
                    id="new-password-repeat-input"
                    name="newPasswordRepeat"
                    onChange={handleChange}
                  ></input>
                  {errors.newPasswordRepeat && (
                    <div className="alert alert-danger farsi">
                      {errors.newPasswordRepeat}
                    </div>
                  )}
                </div>
              </div>
            </div>

            <div className="btns-row-and-login-link">
              <div className="form-row mt-4 btns-row-of-login-page">
                <button
                  disabled={
                    errors.newPassword ||
                    errors.oldPassword ||
                    errors.newPasswordRepeat
                  }
                  className="btn btn-primary submit_btn_of_login_page"
                  type="submit"
                >
                  <div className="btns-row-of-submit-and-reset-btn farsi">
                    تغییر رمز عبور
                  </div>
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default ChangePassword;
