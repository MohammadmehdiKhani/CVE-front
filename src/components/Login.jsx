import React from "react";
import { useState, useEffect } from "react";
import { validate, validateField } from "../services/validation.js";
import http from "../services/httpService.js";
import Joi, { schema } from "joi-browser";
import { Link } from "react-router-dom";
import "../style/login.css";
import { toast } from "react-toastify";

const Login = () => {
  const [acount, setAcount] = useState({ username: "", password: "" });
  const [errors, setErrors] = useState({ username: "", password: "" });

  const schema = {
    username: Joi.string().required().label("Username"),
    password: Joi.string().required().label("Password"),
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const joiErrors = validate(acount, schema);

    setErrors(joiErrors || {});

    if (joiErrors) return;

    try {
      /* const response = await http.post("apiEndpoint", acount);
      localStorage.setItem("tokne", response.data); */
      toast.success("You are logged in");
      window.location = "/";
    } catch (e) {
      if (e.response && e.response.status == 400) {
        const errorsClone = { ...errors };
        errorsClone.username = e.response.data;
        setErrors(errorsClone);
      }
    }
  };

  const handleChange = async (e) => {
    const errorsClone = { ...errors };
    const message = validateField(e, schema);
    if (message) errorsClone[e.target.name] = message;
    else delete errorsClone[e.target.name];

    const acountClone = { ...acount };
    acountClone[e.target.name] = e.target.value;
    setAcount(acountClone);
    setErrors(errorsClone);
  };

  return (
    <div className="container">
      <div className="row login-form-row">
        <div className="col-5">
          <form onSubmit={handleSubmit} className="login-form" noValidate>
            <div className="form-row">
              <div className="col username-col">
                <div className="form-group">
                  <label>
                    <span className="label_of_login_form_fields">Username</span>
                  </label>
                  <input
                    className="form-control"
                    type="text"
                    placeholder="Enter username"
                    id="username-input"
                    name="username"
                    onChange={handleChange}
                  ></input>
                  {errors.username && (
                    <div className="alert alert-danger">{errors.username}</div>
                  )}
                </div>
              </div>
            </div>

            <div className="form-row mt-2">
              <div className="col">
                <div className="form-group mt-1">
                  <label>
                    <span className="label_of_login_form_fields">Password</span>
                  </label>
                  <input
                    className="form-control mt-1"
                    type="password"
                    placeholder="Enter a password"
                    id="password-input"
                    name="password"
                    onChange={handleChange}
                  ></input>
                  {errors.password && (
                    <div className="alert alert-danger">{errors.password}</div>
                  )}
                </div>
              </div>
            </div>

            <div className="btns-row-and-login-link">
              <div className="form-row mt-4 btns-row-of-login-page">
                <button
                  className="btn btn-primary submit_btn_of_login_page"
                  type="submit"
                  disabled={errors.username || errors.password}
                >
                  <div className="btns-row-of-submit-and-reset-btn">Submit</div>
                </button>

                <button
                  onClick={() => {
                    setAcount({ username: "", password: "" });
                    setErrors({ username: "", password: "" });
                  }}
                  className="btn btn-outline-dark reset-btn-of-login-form"
                  type="reset"
                >
                  <div className="btns-row-of-submit-and-reset-btn">Reset</div>
                </button>
              </div>
              <Link to="/register" className="mt-1">
                You don't have any acount? create an acount here.
              </Link>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};
export default Login;
